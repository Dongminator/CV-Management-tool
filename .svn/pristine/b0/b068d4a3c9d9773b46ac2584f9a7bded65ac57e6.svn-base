/*
 * Initialise editable functions
 */
/*jslint browser: true*/
/*global $, jQuery*/

/**
 * Get last id available
 */
function lastId(){
	
	var hi=0;
	
	var categorylist=document.getElementById('full_sp').getElementsByClassName("cvcategory");
	
	for(var i=0;i<categorylist.length;i++){
		var catid = parseInt(categorylist[i].getAttribute("cvid"));

		if(hi < catid) hi = catid;
			
		var itemlist=categorylist[i].getElementsByClassName("item"); 

		for(var j=0;j<itemlist.length;j++){
			var itemid= parseInt(itemlist[j].getAttribute("id"));
			if(hi < itemid) hi = itemid;
		}
	}

	return ++hi;
}

//get all categories of full cv
function getCategories(cv){
	var arr = new Array();
	for(var i=0; i<cv.category.length; i++){
		arr.push(cv.category[i].title);
	}
	return arr;
}

//function to sort out toggling
function findHidden(){
	
	var hiddenones = new Array();
	//right side-bar	
	var categorylist=document.getElementById('full_sp').getElementsByClassName("cvcategory");
	
	for(var i=0;i<categorylist.length;i++){

		var itemlist=categorylist[i].getElementsByClassName("item"); 

		for(var j=0;j<itemlist.length;j++){
			
			var itemid = itemlist[j].getAttribute('id');
			
			if(!($('#'+itemid+'.item').children().children('p').is(':visible'))){
				hiddenones.push(itemid);
			}
		}
	}
	//main section
	var categorylist=document.getElementById('cv_sp').getElementsByClassName("currentcat");
	
	for(var i=0;i<categorylist.length;i++){

		var itemlist=categorylist[i].getElementsByClassName("item"); 

		for(var j=0;j<itemlist.length;j++){
			
			var itemid = itemlist[j].getAttribute('id');
			
			if(!($('#'+itemid).children().children('p').is(':visible'))){
				hiddenones.push(itemid);
			}
		}
	}
	
	return hiddenones;
}

function toggle(hiddenones){
	//right side-bar
	var categorylist=document.getElementById('full_sp').getElementsByClassName("cvcategory");
	
	for(var i=0;i<categorylist.length;i++){

		var itemlist=categorylist[i].getElementsByClassName("item"); 

		for(var j=0;j<itemlist.length;j++){
			
			var itemid = itemlist[j].getAttribute('id');
			
			if(hiddenones.indexOf(itemid)!==-1){
				$('#'+itemid+'.item').children().children('p').hide();
			}else{
				$('#'+itemid+'.item').children().children('p').show();
			}
		}
	}
	
	//main section
	var categorylist=document.getElementById('cv_sp').getElementsByClassName("currentcat");
	
	for(var i=0;i<categorylist.length;i++){

		var itemlist=categorylist[i].getElementsByClassName("item"); 

		for(var j=0;j<itemlist.length;j++){
			
			var itemid = itemlist[j].getAttribute('id');
			
			if(hiddenones.indexOf(itemid)!==-1){
				$('#'+itemid).children().children('p').hide();
			}else{
				$('#'+itemid).children().children('p').show();
			}
		}
	}
}

function findHiddenCats(){
	
	var hiddenones = new Array();
	
	//main section
	var categorylist=document.getElementById('cv_sp').getElementsByClassName("currentcat");
	
	for(var i=0;i<categorylist.length;i++){

		var catid=categorylist[i].getAttribute('id');
		var togglevalue = $('#'+catid).children('div').find('li').eq(0).children().attr('toggle');
		if(togglevalue==='false'){
			hiddenones.push(catid);
		}
	}
	
	var categorylist=document.getElementById('full_sp').getElementsByClassName("cvcategory");
	
	for(var i=0;i<categorylist.length;i++){

		var catid=categorylist[i].getAttribute('id');
		var togglevalue = $('#'+catid).children('div').find('li').eq(0).children().attr('toggle');
		if(togglevalue==='false'){
			hiddenones.push(catid);
		}
	}
	
	return hiddenones;
}

function setHiddenCats(hiddenones){

	var categorylist=document.getElementById('cv_sp').getElementsByClassName("currentcat");
	
	for(var i=0;i<categorylist.length;i++){

		var catid=categorylist[i].getAttribute('id');
		if(hiddenones.indexOf(catid)!==-1){
	    	$('#'+catid).children('div').find('li').eq(0).children().attr('toggle','false');
		}else{
	    	$('#'+catid).children('div').find('li').eq(0).children().attr('toggle','true');
		}
	}
	
	var categorylist=document.getElementById('full_sp').getElementsByClassName("cvcategory");
	
	for(var i=0;i<categorylist.length;i++){

		var catid=categorylist[i].getAttribute('id');
		if(hiddenones.indexOf(catid)!==-1){
	    	$('#'+catid).children('div').find('li').eq(0).children().attr('toggle','false');
		}else{
	    	$('#'+catid).children('div').find('li').eq(0).children().attr('toggle','true');
		}
	}
}
//end here
function getCVS(cv){
	var arr = new Array();
	for(var i=0; i<cv.currentcv.length; i++){
		arr.push(cv.currentcv[i].title);
	}
	return arr;
}
/**
 * Initialise buttons (images)
 */
function buttonsInit(){
	$('#create-item').button({
		icons: {
            primary: "ui-icon-plusthick"
        }
    });
    
    $('.button').button({
		icons: {
            primary: "ui-icon-triangle-1-s"
        }
    });
    
    $('.button_d').button({
		icons: {
            primary: "ui-icon-minusthick"
        }
    });
    
    $('#create-cv').button({
		icons: {
            primary: "ui-icon-plusthick"
        }
    });
    
    $('.showbutton').button({
		icons: {
            primary: "ui-icon-triangle-1-s"
        }
    });
    
    $('.delbutton').button({
		icons: {
            primary: "ui-icon-close"
        }
    });
    
    $('.addtocur').button({
		icons: {
            primary: "ui-icon-plusthick"
        }
    });
    
    $('.addcat').button({
		icons: {
            primary: "ui-icon-plusthick"
        }
    });
    
    $('.delcat').button({
		icons: {
            primary: "ui-icon-close"
        }
    });
    
    $('.showcat').button({
		icons: {
            primary: "ui-icon-triangle-1-s"
        }
    });
}

//initialise sortable items
function sortableInit(){
	 $('.current_items').sortable({
			helper: "clone",
			appendTo: "body",
			update: function( event, ui ) {
				saveResource(cv);
				saveData(cv,currcv);
				buttonsInit();
			}
		});
	    
	    $('#cv_sp').sortable({
			helper: "clone",
			appendTo: "body",
		    update: function( event, ui ) {
		    	saveResource(cv);
		    	saveData(cv,currcv);
				buttonsInit();
		    }
		});
}

/**
 * Initialise functions used in click events
 * @param cv
 * @param currcv
 */
function editableInit(cv,currcv) {
    "use strict";
    buttonsInit();
    sortableInit();
    
    $("#export-pdf").click(function(){
    	var title = $('#cvs').val().replace(/_/g,' ');
    	var template = $('#templates').val();
    	$.ajax({
    		type: "POST",
    		dataType: "text",
    		url: "/export",
    		data: {title: title, template: template}
    	});
    });
    
    $( ".button" ).click(function(){
    
    	if($(this).attr('toggle')==='false'){
        	$(this).parents('div').eq(1).siblings().find('p').slideDown();
        	$(this).attr('toggle','true'); 
    	}else{
        	$(this).parents('div').eq(1).siblings().find('p').slideUp();
        	$(this).attr('toggle','false'); 
    	}
    });
    
    $( ".button_d" ).click(function(){
        $( ".profile1" ).switchClass( "profile1", "profile2", 1000 );
        $( ".profile2" ).switchClass( "profile2", "profile1", 1000 );
        $( ".cvlist1" ).switchClass( "cvlist1", "cvlist2", 1000 );
        $( ".cvlist2" ).switchClass( "cvlist2", "cvlist1", 1000 );
        return false;
    });
    
    $('body').on('click','.showcat',function(){
    	var thisparent = $(this).parents().eq(3);

        if($(this).attr('toggle')==='false'){
        	thisparent.find('p').slideDown();
        	$(this).attr('toggle','true'); 
        }else{
        	thisparent.find('p').slideUp();
        	$(this).attr('toggle','false'); 
        }
    });
    
    $("input[name='cats']").change(function(){
    	setEnabled();
    });

    $('#full').on('click', '#create-item',function(){
    	$( "#dialog-form" ).dialog( "open" );
    });
    
    
    $('#cv').on('click', '#create-cv',function(){
    	$( "#dialog-form2" ).dialog( "open" );
    });
    
    //hide items in the full resource initially
    $('#full_sp').find('.hide').siblings('p').hide();
    
    $('body').on('click','.delbutton',function() {
    	
    	if(confirm("Are you sure you want to remove the current item?")){
    		$(this).parents().eq(4).remove();
    		saveResource(cv);
	    	saveData(cv,currcv);
	    	sortableInit();
	    	buttonsInit();
    	}
	});
 
    $('body').on('click','.showbutton',function() {

    	$(this).parents().eq(2).siblings('p').slideToggle('fast');
	});
    
    
    //keep
    $('body').on('click','.delcat',function(){
    	if(confirm("Are you sure you want to remove the current category?")){
    		$(this).parents().eq(3).remove();
    		saveResource(cv);
	    	saveData(cv,currcv);
    		sortableInit();
	    	buttonsInit();
    	}
    });
    
    $('body').on('click','.addcat', function() {
    	var cat = $(this).parents().eq(3);
    	
    	if (!document.getElementById("current_"+cat.attr('id'))){
			
			var newone = cat.clone(true).attr('id','current_'+cat.attr('id')).attr('class','currentcat');
			
			
			var isHidden;
			if(newone.children('div').find('li').eq(0).children().attr('toggle') === 'false'){
				isHidden = 'true';
			}else{
				isHidden = 'false';
			}
			
			if(cat.attr('id')==='Profile'){
				newone.children('ul').children('li:not(:first)').remove();
			}
			
			newone.children('ul').each(function(){
				$(this).attr('class','current_items');
			})
			
			.children().each(function(){
				var itemid = $(this).attr('id');
				$(this).attr('id','curr'+itemid);
				
				$(this).children().children('div').children().children().children().each(function(){
					if($(this).hasClass("addtocur")){
						$(this).parent().remove();
					}
				});
				
			});
			
			newone.children('div').children('ul').children('li').children('a').switchClass("addcat","delcat"); //find addcat button, replace with a delcat
			
			newone.appendTo($('#cv_sp'));
			saveResource(cv);
	    	saveData(cv,currcv);
	    	
	    	//replace toggle attribute
	    	if(isHidden === 'true'){
		    	$('#'+newone.attr('id')).children('div').find('li').eq(0).children().attr('toggle','false');
	    	}else{
		    	$('#'+newone.attr('id')).children('div').find('li').eq(0).children().attr('toggle','true');
	    	}
	    	
	    	sortableInit();
	    	buttonsInit();
		}else{
			alert("CATEGORY ALREADY EXISTS IN CURRENT CV!");
		}
    });
    
	$("body").on('click','.addtocur',function(){
		var item = $(this).parents().eq(4);
		
		var catparent = $(this).parents().eq(6);
		
		//if item does not exist but category does
		if (!document.getElementById("curr"+item.attr('id')) && document.getElementById("current_"+catparent.attr('id'))){
			var newone = item.clone(true).attr('id','curr'+item.attr('id'));
			newone.children().children('div').children().children().children().each(function(){
				if($(this).hasClass("addtocur")){
					$(this).parent().remove();
				}
			});
			
			if(catparent.attr('id')==="Profile"){
				if($('#current_Profile').children('ul').children().length >= 1) {
					alert("Only one profile item is allowed in the Profile Category.");
				}else{
					newone.appendTo($('#current_'+catparent.attr('id')).children('ul'));
					saveResource(cv);
			    	saveData(cv,currcv);
			    	sortableInit();
			    	buttonsInit();
				}
			}else{
				newone.appendTo($('#current_'+catparent.attr('id')).children('ul'));
				saveResource(cv);
		    	saveData(cv,currcv);
		    	sortableInit();
		    	buttonsInit();
			}
		
		//if item and category both do not exist
		}else if (!document.getElementById("curr"+item.attr('id')) && !document.getElementById("current_"+catparent.attr('id'))){

			var newcat = catparent.clone(true).attr('id','current_'+catparent.attr('id')).attr('class','currentcat');
			
			//check if the whole cat is hidden or not
			var isHidden;
			if(newcat.children('div').find('li').eq(0).children().attr('toggle') === 'false'){
				isHidden = 'true';
			}else{
				isHidden = 'false';
			}
			
			newcat.children('ul').each(function(){
				$(this).attr('class','current_items');
			})
			
			.children().each(function(){
				var itemid = $(this).attr('id');
				
				if(itemid === item.attr('id')){
					$(this).attr('id','curr'+itemid);
				}else{
					$(this).remove();
				}
			})
			
			.children().children('div').children().children().children().each(function(){
				if($(this).hasClass("addtocur")){
					$(this).parent().remove();
				}
			});

			newcat.children('div').children('ul').children('li').children('a').switchClass("addcat","delcat"); //find addcat button, replace with a delcat

			newcat.appendTo($('#cv_sp'));
			
			saveResource(cv);
	    	saveData(cv,currcv);
	    	
	    	//replace toggle attribute
	    	if(isHidden === 'true'){
		    	$('#'+newcat.attr('id')).children('div').find('li').eq(0).children().attr('toggle','false');
	    	}else{
		    	$('#'+newcat.attr('id')).children('div').find('li').eq(0).children().attr('toggle','true');
	    	}
	    	
	    	sortableInit();
	    	buttonsInit();
	    	

			
		//if item already exists
		} else if (document.getElementById("curr"+item.attr('id'))) {
			alert("ITEM ALREADY EXISTS IN CURRENT CV!");
		}
		
	});
    
    $('#workspace').on('click','.hide',function(){ //inline edit for headers
    	var thisone = $(this).parent().parent().attr("id"); //get real id

		var patt = /[\d]+/;
		var curr = /curr/;

		var idnum = patt.exec(thisone); //get number part
		var old = $(this).text();
		
		var noclone = false; //boolean to check if there is a clone (e.g. when clicking on full resource, check if it exists in current cv
		
		if(curr.test(thisone)){ 
			var h3child = $('#'+thisone).children().children('h3');
			var h3clone = $('#'+idnum+'.item').children().children('h3'); //clone always exist
		}else{ 
			if($('#curr'+thisone).length){ //if clone exist
				var h3clone = $('#curr'+thisone).children().children('h3');
			}else{
				noclone = true;
			}
			var h3child = $('#'+idnum+'.item').children().children('h3');
		}
		
		if(h3child.children('input').length===0){
			
			var inputbox = "<input type='text' class='inputbox' value=\""+$(this).text()+"\">";
			h3child.html(inputbox);
			
			$("input.inputbox").focus();
			
			$("input.inputbox").blur(function() {
				var value = $(this).val();
				h3child.text(value);
				if(noclone===false){
					h3clone.text(value);
				}
				if(value!==old){//only save if there's a change
					saveResource(cv);
			    	saveData(cv,currcv);
			    	sortableInit();
			    	buttonsInit();
				} 
			});
			
			$(".inputbox").keypress(function (event){
				if (event.keyCode===13) {//13 = Enter
					event.preventDefault();
					$(this).blur();
				}
				else if(event.keyCode===27){
					h3child.text(old); //revert to previous one if esc
					if(noclone===false){
						h3clone.text(old);
					}
					$(this).blur();
				}
			});
		}
	}); 
	
    
    $('#profile_sp').on('click','.hName, .hPhone, .hAddr',function(){ //inline edit for profile
    	//alert($(this).text());
    	var txtarea = $(this);
    	var old = txtarea.text();
    	if($(this).children('input').length===0){
			
			var inputbox = "<input type='text' class='inputbox' value=\""+$(this).text()+"\">";
			$(this).html(inputbox);
			
			$("input.inputbox").focus();
			
			$("input.inputbox").blur(function() {
				var value = $(this).val();
				txtarea.text(value);
			
				if(value!==old){//only save if there's a change
					saveResource(cv);
			    	saveData(cv,currcv);
			    	sortableInit();
			    	buttonsInit();
				} 
			});
			
			$(".inputbox").keypress(function (event){
				if (event.keyCode===13) {//13 = Enter
					event.preventDefault();
					$(this).blur();
				}
				else if(event.keyCode===27){
					txtarea.text(old); //revert to previous one if esc
					
					$(this).blur();
				}
			});
		}
	}); 
    
	$('#workspace').on('click','.editable',function(){
		
		var thisone = $(this).attr("id"); //id is set such as : edit(id of current class being changed)
		
		var old = $(this).text();
			
		if($(this).children('textarea').length===0){
			var txt = "<textarea id=edit" +thisone+ " wrap=\"soft\">"+$(this).text()+"</textarea>";
			$(this).html(txt);

			$("#edit"+thisone).blur(function(){
				var value = $(this).val();
				if(value===""){
					$('#'+thisone+'.editable').text(old); //revert to previous one if empty
				}else{
					$('#'+thisone+'.editable').text(value);
				}
				if(value!==old){ //only save if there's a change
					saveResource(cv); 
			    	saveData(cv,currcv);
			    	sortableInit();
			    	buttonsInit();
				}
			});
						
			$("#edit"+thisone).focus();
			
			$("#edit"+thisone).keypress(function (event){
				if (event.keyCode===13) {//13 = Enter
					event.preventDefault();
					$(this).blur();
				}
				else if(event.keyCode===27){
					$('#'+thisone+'.editable').text(old); //revert to previous one if esc
					$(this).blur();
				}
			});
		}
	});
	
	$("#cvs").change(function(){
		var item = $(this).val().replace(/_/g, " ");
    	
		//only keep state of items in full resource
		var hiddenones = findHidden();
		document.getElementById('full_sp').innerHTML = fullcvParser(cv);
		toggle(hiddenones);
		
		document.getElementById('cv_sp').innerHTML = currentcvParser(cv,currcv);
		document.getElementById('cvnamelabel').innerHTML = 'Current Curriculum Vitae : '+item;
		
	    sortableInit();
	    buttonsInit();
	});
}

/**
 * Initialise adding functions (adding items and categories)
 * @param cv
 * @param currcv
 */
function addInit(cv,currcv){
	 var category = $("#category"),
	 	category1 = $("#category1"),
	    title = $("#title"),
	    content = $("#content"),
	    allFields = $([]).add(category).add(category1).add(title).add(content); 
		$("#dialog-form").dialog({
	    	autoOpen: false,
	    	height: 300,
	    	width: 350,
	    	modal: true,
	    	buttons: {
	        	"Add": function(){
	        		
    				allFields.removeClass( "ui-state-error" );
    				var show = '<li class="hrz"><a href="#Min" class="showbutton" style="width:20px; height:16px; font-size:9px"></a></li>';
    				//delete button - var del = '<li class="hrz"><a href="#Min" class="delbutton" style="width:20px; height:16px; font-size:9px"></a></li>';
    				var add = '<li class="hrz"><a href="#Min" class="addtocur" style="width:20px; height:16px; font-size:9px"></a></li>';
    				
    				var buttondiv = '<div style="float:right"><ul>'+show+add+'</ul></div>';
    				
    				var addcat = '<li class="hrz"><a href="#Min" class="addcat" style="width:20px"></a></li>';
    				var addcatdiv = '<div style="float:right"><ul>'+addcat+'</ul></div>'; //used for adding categories
    				
	    			if($('input:radio[name=cats]:checked').val()==="opt1"){
	    				$("#category").removeAttr("disabled");
	    				$("#category1").attr("disabled","disabled");
    					$("#"+category.val()).children('ul').append("<li id="+parseInt(lastId())+" class=\"item\"><div class=\"hidable\">"+buttondiv+"<h3 class=\"hide\">"+title.val()+"</h3><p><span id=\"span"+parseInt(lastId())+"\" class=\"editable\">"+content.val()+"</span></p></div></li>");
            		}else{
	    				$("#category1").removeAttr("disabled");
	    				$("#category").attr("disabled","disabled");
	    				var newcat = category1.val().replace(/\s+/g, "_");
            			$("#full_sp").append("<div id=\""+newcat+"\" class=\"cvcategory\" cvid=\""+parseInt(lastId())+"\">"+addcatdiv+"<h3 class=\"category_title\">"+category1.val()+"</h3><ul class=\"items\"><li id="+parseInt(lastId()+1)+" class=\"item\"><div class=\"hidable\">"+buttondiv+"<h3 class=\"hide\">"+title.val()+"</h3><p><span id=\"span"+parseInt(lastId()+1)+"\" class=\"editable\">"+content.val()+"</span></p></div></li>");
            		}
	    			saveResource(cv); 
        	    	saveData(cv,currcv);
        			document.getElementById('category').innerHTML = arrVals(getCategories(cv)); //load categories on combo box
        		    sortableInit();
        		    buttonsInit();

        			$( this ).dialog( "close" );
	        	},
	        	Cancel: function(){
	            	$( this ).dialog( "close" );
	        	}
	    	},
	    	close: function(){
	        	allFields.val( "" ).removeClass( "ui-state-error" );
	    	}
	});
}


/**
 * Add a new CV
 * @param cv
 * @param currcv
 * @param cvs - The combobox used for the cvs. Used to load chosen cv from the combobox
 */
function addCV(cv,currcv,cvs){
	 var cvname = $("#cvname"),
	    allFields = $([]).add(cvname);
		$("#dialog-form2").dialog({
	    	autoOpen: false,
	    	height: 300,
	    	width: 350,
	    	modal: true,
	    	buttons: {
	        	"Add": function(){
    				allFields.removeClass( "ui-state-error" );
	        		var newcv = {
							"title": cvname.val(),
							"content": [
							]
						};
					currcv.currentcv[currcv.currentcv.length] = newcv; //appends new CV
					
	        		var item = cvname.val().replace(/\s+/g, "_");
	        		
	        		cvs.push(cvname.val());
	        		document.getElementById('cvs').innerHTML = arrVals(cvs); //load cvs on combo box

					$("#cvs").val(cvname.val());
        		    
	        		document.getElementById('cv_sp').innerHTML = currentcvParser(cv,currcv);
	        		document.getElementById('cvnamelabel').innerHTML = 'Current Curriculum Vitae : '+cvname.val();

	        		saveResource(cv); 
        	    	saveData(cv,currcv);
	        		sortableInit();
	        		buttonsInit();
	        		
	        		$( this ).dialog( "close" );
	        	},
	        	Cancel: function(){
	            	$( this ).dialog( "close" );
	        	}
	    	},
	    	close: function(){
	        	allFields.val( "" ).removeClass( "ui-state-error" );
	    	}
	});
}

/**
 * Swap colours and functionality for radio buttons (when adding a category)
 */
function setEnabled(){
	if($('input:radio[name=cats]:checked').val()==="opt1"){
		$("#category").removeAttr("disabled");
		$("#oldlabel").css('color', '#000000');

		$("#category1").attr("disabled","disabled");
		$("#newlabel").css('color', '#808080');

	}else{
		$("#category1").removeAttr("disabled");
		$("#newlabel").css('color', '#000000');

		
		$("#category").attr("disabled","disabled");
		$("#oldlabel").css('color', '#808080');

	}
}

/**
 * Load array values into combobox
 * @param arr The array which values will be loaded into the combobox
 * @returns {String} The html string for the combobox
 */
function arrVals(arr){
	var str="";
	var i;
	for(i=0; i<arr.length; i++) {
		var item = arr[i].replace(/\s+/g, "_");
			str += '<option value="' +item+ '">'+arr[i]+'</option>';
	}

	return str;
}

/**
 * Start the document
 * @param cv - the whole cv
 * @param currcv - the current cvs being worked on
 */
function init(cv,currcv,hasStarted,avatar){
	
	document.getElementById('cvs').innerHTML = arrVals(getCVS(currcv)); //load cvs on combo box
	document.getElementById('category').innerHTML = arrVals(getCategories(cv)); //load categories on combo box

	//fill information of user
	document.getElementById('profile_sp').innerHTML='<div class="top"></div><img src="'+avatar+'" height="100" width="100"><p style="margin-right:10px;margin-top:10px"><b>Name</b>:<span class="hName">'+' '+cv.header.name+'</span><br><b>Phone</b>:<span class="hPhone">'+' '+cv.header.phone+'</span><br><b>Address</b>:<span class="hAddr">'+' '+cv.header.address+'</span></p><br>';

	var cvName= getCVS(currcv)[0]; //Get first element of array

	document.getElementById('full_sp').innerHTML = fullcvParser(cv);
	document.getElementById('cv_sp').innerHTML = currentcvParser(cv,currcv);

	
	drawTree(cv,currcv,"#cvtree");

	addInit(cv,currcv);
	addCV(cv,currcv,getCVS(currcv));
	editableInit(cv,currcv);
	
	document.getElementById('cvnamelabel').innerHTML = 'Current Curriculum Vitae : '+cvName;
	
	if(hasStarted !== 'True') $('#tutorial').tutorial();

   // $( document ).tooltip({ position: {my: "right bottom-5", at: "center top"} }); forget this. use native tooltip
}
