import sys
sys.path.insert(0, 'reportlab.zip')

from reportlab.platypus import Paragraph
from reportlab.lib.styles import ParagraphStyle
#from reportlab.rl_config import defaultPageSize
#from reportlab.lib.units import inch
from reportlab.lib.enums import TA_LEFT, TA_CENTER, TA_RIGHT, TA_JUSTIFY
import json

#PAGE_HEIGHT = defaultPageSize[1]

class StyleSheet():
	def __init__(self):
		self.template = None
		
	def getTemplate(self, template_file):
		temp = open(template_file, "r")
		self.template = json.load(temp)
		temp.close()	
	
	def getHeaderStyle(self):
		font = self.template['header']['font']
		size = self.template['header']['size']
		align = self.template['header']['align']
		
		style = ParagraphStyle(name = "header",fontName = font,fontSize = size,leading = size+2,alignment = align)
		return style
	
	def getCategoryStyle(self):
		font = self.template['category']['font']
		size = self.template['category']['size']
		align = self.template['category']['align']
		
		style = ParagraphStyle(name = "category",fontName = font,font 
										fontSize = 14,
										leading = 16,
										alignment = TA_LEFT)
		return style
	
	def getItemStyle(self):
		pass
	

class PDFGenarate():	
	def __init__(self):
		self.Elements = []
		self.cv = None
		
	def getDocument(self, document_file):
		temp = open(document_file, "r") 
		self.cv = json.load(temp)
		temp.close()
	
	def myFirstPage(self, canvas, doc):
		pass
	
	def myLaterPages(self, canvas, doc):
		pass
	
	def generateElements(self):
		for key in self.cv['header']:
			Elements.append(Paragraph(self.cv['header'][key], headerStyle))
		for dict in self.cv['category']:
			Elements.append(Paragraph(dict['title'], categoryStyle))
		Elements.insert(0,Spacer(0,10))
	
	def generatePDF(self):
		doc = SimpleDocTemplate(string)
		doc.build(Elements, onFirstPage=None, onLaterPages=None)	

def main():
	pass

if __name__ == '__main__':
	main()



